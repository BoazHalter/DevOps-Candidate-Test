apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nodejs-app-ingress
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: my-service
                port:
                  number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-configmap
data:
  nodejs-config.yaml: |-
    # Add your Node.js configuration here
    key1: value1
    key2: value2
  ingress-config.yaml: |-
    # Add your Ingress controller configuration here
    key3: value3
    key4: value4

---
apiVersion: v1
kind: Service
metadata:
  name: my-service
spec:
  selector:
    app: my-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
        - name: nodejs-app
          image: your-nodejs-image:tag
          ports:
            - containerPort: 5000  # Change this to your Node.js app's port
          volumeMounts:
            - name: config-volume
              mountPath: /app/config  # Mount path for the ConfigMap
              readOnly: true
              subPath: nodejs-config.yaml
        - name: ingress-controller
          image: your-ingress-controller-image:tag
          ports:
            - containerPort: 80  # Change this to your Ingress controller's port
          volumeMounts:
            - name: config-volume
              mountPath: /etc/ingress/config  # Mount path for the ConfigMap
              readOnly: true
              subPath: ingress-config.yaml
      volumes:
        - name: config-volume
          configMap:
            name: my-configmap  # Reference to the ConfigMap created above
